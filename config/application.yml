server:
  port: 8082
spring:
  application:
    name: backoffice-service
  datasource:
    url: jdbc:postgresql://localhost:5432/ads-app?currentSchema=back-office
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            clientId: back-office
            clientSecret: gGZqo3AKkmDlffCLM1QZx1UkeHbS6amt
            authorizationGrantType: client_credentials
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/golden-deals
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/golden-deals
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  flyway:
    default-schema: back-office
    enabled: true
  cloud:
    config:
      enabled: false
eureka:
  client:
    fetch-registry: false
#    serviceUrl:
#      defaultZone: https://discovery-service-production-eb28.up.railway.app
logging:
  level:
    org.springframework.security: DEBUG
jwt:
  auth:
    converter:
      resource-id: back-office
      principal-attribute: preferred_username